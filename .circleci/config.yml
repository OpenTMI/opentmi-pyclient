# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.7:
          filters:
            tags:
              only: /.*/
      - test-3.6:
          filters:
            tags:
              only: /.*/
      - test-3.5:
          filters:
            tags:
              only: /.*/
      - test-2.7:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - test-3.7
            - test-3.6
            - test-3.5
            - test-2.7
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
jobs:
  test-3.7: &test-template
    docker:
      - image: circleci/python:3.7
    working_directory: ~/opentmi-pyclient
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python --version
            virtualenv venv
            source venv/bin/activate
            python setup.py develop
            pip install -r dev_requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            mkdir junit || true
            nosetests --with-xunit --with-coverage --cover-package=opentmi_client --cover-html --cover-html-dir=htmlcov --cover-xml-file=coverage.xml --xunit-file=junit/results.xml
            coveralls || true
            pylint opentmi_client
      - store_artifacts:
          path: htmlcov
          destination: htmlcov
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit
          destination: juni

  test-3.6:
    <<: *test-template
    docker:
    - image: circleci/python:3.6

  test-3.5:
    <<: *test-template
    docker:
      - image: circleci/python:3.5

  test-2.7:
    <<: *test-template
    docker:
      - image: circleci/python:2.7

  deploy:
    <<: *test-template
    steps:
      - run:
          name: verify git tag vs. version
          command: |
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: upload to pypi
          command: |
            twine upload --repository-url https://test.pypi.org/legacy/ dist/*
